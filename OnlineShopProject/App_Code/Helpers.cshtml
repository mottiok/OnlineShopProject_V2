@using System.Collections.Specialized
@using System.Runtime.InteropServices
@using System.Web.Mvc
@using System.Web.Routing
@using OnlineShopProject.CurrencyReference
@using OnlineShopProject.Models

@helper AddParamToUrl(string name, string param, string text, UrlHelper urlHelper)
{
    NameValueCollection paramValues = HttpUtility.ParseQueryString(Request.Url.Query);

    paramValues[name] = param;

    RouteValueDictionary dic = new RouteValueDictionary();

    for (int i = 0; i < paramValues.Count; i++)
    {
        dic[paramValues.GetKey(i)] = paramValues.Get(i);
    }
    <li>
        <a href="@urlHelper.Action("Filter", "Albums", dic)" id="@name-@param">
            <img src="../Content/images/shop/checkbox_unselected.jpg" />
            @text
        </a>
    </li>
}

@functions {

    public static string GetCurrency(ApplicationUser user)
    {
        if (Request.IsAuthenticated)
        {
            return  user.CurrencyModel.Sign;
        }
        
        return "$";
    }

    public static string GetCurrencyAndPrice(ApplicationUser user, double amount)
    {
        if (Request.IsAuthenticated)
        {
            if (user.CurrencyModel.Currency == Currency.USD)
            {
                return "$" + amount;                        
            }
            
            CurrencyConvertorSoapClient client = new CurrencyConvertorSoapClient("CurrencyConvertorSoap");
            double conversion = client.ConversionRate(Currency.USD, user.CurrencyModel.Currency);

            double afterConversion = conversion * amount;

            return String.Format("{0:0.00}", afterConversion) + user.CurrencyModel.Sign;
        }

        return "$" + amount;
    }
}